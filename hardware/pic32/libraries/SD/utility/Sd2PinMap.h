/* Arduino SdFat Library
 * Copyright (C) 2010 by William Greiman
 * Revision Date: 08/18/2011 (Olver Jones)
 *
 * This file is part of the Arduino SdFat Library
 *
 * This Library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This Library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the Arduino SdFat Library.  If not, see
 * <http://www.gnu.org/licenses/>.
 */
// Warning this file was generated by a program.
//* ***************************************************************************
//* Revision History:
//* Aug 23, 2012 <Gene Apperson> Changed pin definitions for bit-banged SPI code
//*					to remove dependency on the Microchip plib library.
#ifndef Sd2PinMap_h
#define Sd2PinMap_h

#if defined(_BOARD_MEGA_) || defined(_BOARD_UNO_) || defined(_BOARD_UC32_)

	//Pin 11
	#define	IOPORT_SDO			TRISG
	#define	BN_SDO				8

	//Pin 12
	#define	IOPORT_SDI			TRISG
	#define BN_SDI				7

	//Pin 13
	#define	IOPORT_SCK			TRISG
	#define BN_SCK				6

#elif defined(_BOARD_PONTECH_QUICK240_USB_)
        //uc Pin 72
        //#define prtSDO				IOPORT_D
        //#define	trisSDO				TRISD
        //#define	latSDO				LATD
        //#define	bnSDO				BIT_0

	#define IOPORT_SDO		TRISD
	#define BN_SDO			0

        //uc Pin 9
        //#define prtSDI				IOPORT_C
        //#define trisSDI				TRISC
        //#define	latSDI				LATC
        //#define bnSDI				BIT_4

	#define IOPORT_SDI		TRISC
	#define	BN_SDI			4

        //uc Pin 70
        //#define prtSCK				IOPORT_D
        //#define trisSCK				TRISD
        //#define latSCK				LATD
        //#define bnSCK				BIT_10

	#define	IOPORT_SCK		TRISD
	#define	BN_SCK			10

#elif defined(_BOARD_CEREBOT_MX3CK_)

	#define IOPORT_SDO		TRISF	//JC
	#define	BN_SDO			5

	#define	IOPORT_SDI		TRISF
	#define	BN_SDI			4

	#define	IOPORT_SCK		TRISB
	#define	BN_SCK			14

#elif defined(_BOARD_CEREBOT_MX4CK_)

	#define	IOPORT_SDO		TRISB	//JK
	#define	BN_SDO			11

	#define	IOPORT_SDI		TRISB
	#define	BN_SDI			12

	#define	IOPORT_SCK		TRISB
	#define	BN_SCK			13

#elif defined(_BOARD_CEREBOT_MX7CK_)

	#define	IOPORT_SDO		TRISF	//JF
	#define	BN_SDO			5

	#define	IOPORT_SDI		TRISF
	#define	BN_SDI			4

	#define	IOPORT_SCK		TRISF
	#define	BN_SCK			13

#else
//*	Dec 14, 2011	<MLS>	Issue #160 this is the same, but we have to have a default, this still needs work

	//Pin 11
	#define	IOPORT_SDO			TRISG
	#define	BN_SDO				8

	//Pin 12
	#define	IOPORT_SDI			TRISG
	#define BN_SDI				7

	//Pin 13
	#define	IOPORT_SCK			TRISG
	#define BN_SCK				6

#endif

#endif
